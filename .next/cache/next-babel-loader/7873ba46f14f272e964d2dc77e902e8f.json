{"ast":null,"code":"import { makeSchema, queryType } from \"@nexus/schema\";\nimport { nexusSchemaPrisma } from \"nexus-plugin-prisma/schema\";\nimport path from \"path\";\nconst Query = queryType({\n  definition(t) {\n    t.string(\"name\", () => \"My Name\");\n  }\n\n});\nexport const schema = makeSchema({\n  types: {\n    Query\n  },\n  plugins: [nexusSchemaPrisma()],\n  outputs: {\n    schema: path.join(process.cwd(), \"schema.graphql\"),\n    typegen: path.join(process.cwd(), \"nexus.ts\")\n  },\n  typegenAutoConfig: {\n    contextType: \"Context.Context\",\n    sources: [{\n      source: \"@prisma/client\",\n      alias: \"prisma\"\n    }, {\n      source: require.resolve(\"./context\"),\n      alias: \"Context\"\n    }]\n  }\n});","map":{"version":3,"sources":["/Users/sebastianhiguita/Desktop/react/nextjs-prisma-nexus-schema/src/schema.ts"],"names":["makeSchema","queryType","nexusSchemaPrisma","path","Query","definition","t","string","schema","types","plugins","outputs","join","process","cwd","typegen","typegenAutoConfig","contextType","sources","source","alias","require","resolve"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,eAAtC;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,MAAMC,KAAK,GAAGH,SAAS,CAAC;AACtBI,EAAAA,UAAU,CAACC,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACC,MAAF,CAAS,MAAT,EAAiB,MAAM,SAAvB;AACD;;AAHqB,CAAD,CAAvB;AAMA,OAAO,MAAMC,MAAM,GAAGR,UAAU,CAAC;AAC/BS,EAAAA,KAAK,EAAE;AAAEL,IAAAA;AAAF,GADwB;AAE/BM,EAAAA,OAAO,EAAE,CAACR,iBAAiB,EAAlB,CAFsB;AAG/BS,EAAAA,OAAO,EAAE;AACPH,IAAAA,MAAM,EAAEL,IAAI,CAACS,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,gBAAzB,CADD;AAEPC,IAAAA,OAAO,EAAEZ,IAAI,CAACS,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,UAAzB;AAFF,GAHsB;AAO/BE,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,WAAW,EAAE,iBADI;AAEjBC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,MAAM,EAAE,gBADV;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADO,EAKP;AACED,MAAAA,MAAM,EAAEE,OAAO,CAACC,OAAR,CAAgB,WAAhB,CADV;AAEEF,MAAAA,KAAK,EAAE;AAFT,KALO;AAFQ;AAPY,CAAD,CAAzB","sourcesContent":["import { makeSchema, queryType } from \"@nexus/schema\";\nimport { nexusSchemaPrisma } from \"nexus-plugin-prisma/schema\";\nimport path from \"path\";\n\nconst Query = queryType({\n  definition(t) {\n    t.string(\"name\", () => \"My Name\");\n  },\n});\n\nexport const schema = makeSchema({\n  types: { Query },\n  plugins: [nexusSchemaPrisma()],\n  outputs: {\n    schema: path.join(process.cwd(), \"schema.graphql\"),\n    typegen: path.join(process.cwd(), \"nexus.ts\"),\n  },\n  typegenAutoConfig: {\n    contextType: \"Context.Context\",\n    sources: [\n      {\n        source: \"@prisma/client\",\n        alias: \"prisma\",\n      },\n      {\n        source: require.resolve(\"./context\"),\n        alias: \"Context\",\n      },\n    ],\n  },\n});\n"]},"metadata":{},"sourceType":"module"}